type Query {
  getUser: User
  getTodos: [Todo]!
  getTodoById(id: Int!): Todo
}

type Mutation {
  createTodo(input: CreateTodoInput): Todo
  updateTodo(id: Int, input: UpdateTodoInput): Todo
  deleteTodo(id: Int): Todo
  createUser(input: CreateUserInput): User
  updateUser(id: Int, input: UpdateUserInput): User
}

input CreateTodoInput {
  title: String!
  description: String
}

input UpdateTodoInput {
  title: String
  description: String
  status: TodoStatus
}

input CreateUserInput {
  name: String!
}

input UpdateUserInput {
  name: String
}

enum TodoStatus {
  done
  pending
}

type Todo {
  id: Int
  createdAt: Date
  updatedAt: Date
  title: String
  description: String
  status: TodoStatus!
  user: User
  userId: Int
}

type User {
  id: Int
  name: String
  todos: [Todo]
}

scalar Date
