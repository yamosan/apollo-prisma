type Query {
  getUserById(id: Int!): User
  getTodos(userId: Int!): [Todo]
  getTodoById(userId: Int!, id: Int!): Todo
}

type Mutation {
  createTodo(userId: Int!, input: CreateTodoInput!): Todo
  updateTodo(userId: Int!, id: Int!, input: UpdateTodoInput!): Todo
  deleteTodo(userId: Int!, id: Int!): Todo
  createUser(input: CreateUserInput!): User
  updateUser(id: Int!, input: UpdateUserInput!): User
}

input CreateTodoInput {
  title: String!
  description: String
}

input UpdateTodoInput {
  title: String
  description: String
  status: TodoStatus
}

input CreateUserInput {
  name: String!
}

input UpdateUserInput {
  name: String
}

enum TodoStatus {
  done
  pending
}

type Todo {
  id: Int
  createdAt: Date
  updatedAt: Date
  title: String
  description: String
  status: TodoStatus!
  user: User
  userId: Int
}

type User {
  id: Int
  name: String
  todos: [Todo]
}

scalar Date
